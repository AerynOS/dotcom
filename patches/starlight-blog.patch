diff --git a/libs/content.ts b/libs/content.ts
index 7e9467ebbdae06ffc76220ad4b24f8942142aa48..68d03e716807ccf1561a8792cddd10da8c3ba0f5 100644
--- a/libs/content.ts
+++ b/libs/content.ts
@@ -4,6 +4,10 @@ import starlightConfig from 'virtual:starlight/user-config'
 import config from 'virtual:starlight-blog-config'
 import context from 'virtual:starlight-blog-context'
 
+import { experimental_AstroContainer as AstroContainer } from "astro/container";
+import { getContainerRenderer as getMDXRenderer } from "@astrojs/mdx";
+import { loadRenderers } from "astro:container";
+
 import type { StarlightBlogAuthor } from '../schema'
 
 import { getEntryAuthors } from './authors'
@@ -103,9 +107,11 @@ export function getBlogEntryMetadata(entry: StarlightBlogEntry, locale: Locale):
 }
 
 export async function getBlogEntries(locale: Locale): Promise<StarlightBlogEntry[]> {
-  if (blogEntriesPerLocale.has(locale)) {
-    return blogEntriesPerLocale.get(locale) as StarlightBlogEntry[]
-  }
+
+  // I get error "Blog post with slug '${slug}' not found."" if this is enabled, when I do a 'astro build' - dev mode works fine
+  // if (blogEntriesPerLocale.has(locale)) {
+  //   return blogEntriesPerLocale.get(locale) as StarlightBlogEntry[]
+  // }
 
   const docEntries = await getCollection('docs')
   const blogEntries: StarlightEntry[] = []
@@ -162,8 +168,20 @@ export async function getBlogEntryExcerpt(entry: StarlightBlogEntry) {
     return entry.data.excerpt
   }
 
-  const { Content } = await render(entry)
 
+  const moreTokens = ["<!--more-->", "<!-- more -->", "<more></more>"]
+  for (const token of moreTokens) {
+    if (entry.body.includes(token)) {
+      let url = getRelativeUrl(`/${entry.id}`)
+      const renderers = await loadRenderers([getMDXRenderer()]);
+      const container = await AstroContainer.create({ renderers });
+      const { Content } = await render(entry)
+      const content = await container.renderToString(Content);
+      const excerpt = content.split(token)[0];
+      return `${excerpt}<p><a href="${url}">Read more</a></p>`
+    }
+  }
+  const { Content } = await render(entry)
   return Content
 }
 
